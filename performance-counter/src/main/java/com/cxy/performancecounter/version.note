最终目标:

数据采集：负责打点采集原始数据，包括记录每次接口请求的响应时间和请求时间。数据采集要高度容错，且不能影响到接口本身的可用性。
        此外数据采集 API 需要保证易用性。

数据存储：保存采集的原始数据，方便后面做聚合统计。可以存在 Redis、MySQL、HBase、日志、文件、内存中。
          为了减少这一步对接口性能的影响，采集和存储最好异步完成。

聚合统计：处理原始数据，聚合为统计数据：max、min、avg、pencentile、count、tps 等。
          为了支持更多的聚合统计规则，代码要灵活、可扩展。

显示：负责将统计数据以某种格式显示，如：主动输出到命令行、邮件； 被动响应到网页； 自定义显示终端等。

v1:

数据采集：负责打点采集原始数据，包括记录每次接口请求的响应时间和请求时间。

数据存储：暂时只支持 Redis 存储，并且，采集与存储两个过程暂时同步执行。

聚合统计：将原始数据聚合为统计数据，包括：响应时间最大值、最小值、平均值、99.9 百分位值、99 百分位值，以及接口请求的次数和 tps。

显示：暂时只支持主动推送给命令行和邮件。命令行间隔 n 秒统计显示上 m 秒的数据（比如，间隔 60s 统计上 60s 的数据）。
        邮件每日统计发送上日的数据。


v2:

数据采集：负责打点采集原始数据，包括记录每次接口请求的响应时间和请求时间。

数据存储：暂时只支持 Redis 存储，并且，采集与存储两个过程暂时同步执行。

聚合统计：将原始数据聚合为统计数据，包括：响应时间最大值、最小值、平均值、99.9 百分位值、99 百分位值，以及接口请求的次数和 tps。

显示：暂时只支持主动推送给命令行和邮件。命令行间隔 n 秒统计显示上 m 秒的数据（比如，间隔 60s 统计上 60s 的数据）。
        邮件每日统计发送上日的数据。